(()=>{"use strict";const t={root:null,rootMargin:"0px",threshold:.3},e={root:null,rootMargin:"0px",threshold:.3};(()=>{let t=document.querySelectorAll("main img");console.log(t);let r=new IntersectionObserver((t=>{t.forEach((t=>{if(t.isIntersecting&&t.intersectionRatio>0){const e=new Image;e.src=t.target.getAttribute("data-src"),e.onload=()=>{t.target.setAttribute("src",e.src),t.target.closest("div").classList.add("active"),t.target.setAttribute("data-src","")},r.unobserve(t.target)}}))}),e);t.forEach((t=>{r.observe(t)}))})(),function(){const t=document.querySelector(".menu"),e=document.querySelector("header");t.addEventListener("click",(()=>e.classList.toggle("nav-showing")))}(),(()=>{let e=document.querySelectorAll(".background"),r=new IntersectionObserver((t=>{t.forEach((t=>{if(t.isIntersecting&&t.intersectionRatio>0){const e=new Image;e.src=t.target.getAttribute("data-bg"),e.onload=()=>{t.target.style.backgroundImage="url("+e.src+")",t.target.closest("section").classList.add("active"),t.target.setAttribute("data-bg","")},r.unobserve(t.target)}}))}),t);e.forEach((t=>{r.observe(t)}))})()})();